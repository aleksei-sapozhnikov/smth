name: Demo - artifacts, outputs
on:
  push:
#    branches:
#      - master
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.pub.outputs.res }}
    steps:
      - name: Download source code
        uses: actions/checkout@v3
      - name: Check Google Java Format
        uses: axel-op/googlejavaformat-action@v3.6.0
        with:
          args: "--replace"
          skipCommit: true
      - name: Print format diffs and fail if not all formatted
        run: git --no-pager diff --exit-code
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build project
        run: ./gradlew build
      - name: Publish result jar as output
        id: pub
        run: |
          echo "Searching for 'smth-0.0.1.jar' or 'smth-0.0.1-SNAPSHOT.jar' (exluding e.g. 'smth-0.0.1-SNAPSHOT-plain.jar')"
          reg_exp='.*\/[a-z].+-[\d]{1,5}\.0\.1-SNAPSHOT?\.jar'
          find ./build/libs/*.jar -regextype posix-extended -regex $reg_exp -execdir echo 'res={}' >> $GITHUB_OUTPUT ';'
#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: Build artifacts
#          path: build/libs/*
#  #          path: |
#  #            build/libs/*
#  #            README.md
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
#      - name: Get build artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: Build artifacts
#      - name: Print build artifact contents
#        run: ls
      - name: Print build result file name
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
