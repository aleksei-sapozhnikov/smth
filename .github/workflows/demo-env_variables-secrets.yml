name: Demo - environment, variables and secrets
on:
  #  push:
  workflow_dispatch:
env:
  ENV_VAR: GLOBAL
  IS_TEST_ENVIRONMENT: true
jobs:
  workflow-description:
    runs-on: ubuntu-latest
    steps:
      - name: Print workflow description
        run: |
          echo ---
          echo 'Shows usage of environment variables and secrets (set in workflow and in GitHub repository)'
          echo 'Shading examples show how environment variable shade each other values (when having the same name)'
          echo '  the general rule is: the smallest scope wins, i.e. GLOBAL < JOB < STEP'
          echo '  it means that workflow-level variable will be shaded by job-level one with the same name, and so on
          echo ---
          echo The other job shows how variables and secrets set in the Github repository work 
          echo It prints its own explanation
          echo ---
  no-shading:
    runs-on: ubuntu-latest
    steps:
      - name: Print '$ENV_VAR' shaded on JOB and STEP levels
        run: |
          echo '$ENV_VAR =' "$ENV_VAR"'
          echo $''{{env.ENV_VAR}} =' "${{env.ENV_VAR}}"
  shade-on-job:
    runs-on: ubuntu-latest
    env:
      ENV_VAR: JOB
    steps:
      - name: Print env variables
        run: |
          echo '$ENV_VAR =' "$ENV_VAR"'
          echo $''{{env.ENV_VAR}} =' "${{env.ENV_VAR}}"
  shade-on-job-and-step:
    runs-on: ubuntu-latest
    env:
      ENV_VAR: JOB
    steps:
      - name: Print '$ENV_VAR' shaded on JOB and STEP levels
        env:
          ENV_VAR: STEP
        run: |
          echo '$ENV_VAR =' "$ENV_VAR"'
          echo $''{{env.ENV_VAR}} =' "${{env.ENV_VAR}}"
  print-repo-variable-and-secret:
    runs-on: ubuntu-latest
    environment: testing
    env:
      REPO_VARIABLE: ${{ vars.REPOSITORY_VARIABLE }}
      REPO_SECRET: ${{ secrets.REPOSITORY_SECRET }}
    steps:
      - name: Print description
        run: |
          echo ---
          echo A variable and a secret are defined in the GitHub repository
          echo Here we try to print them and see the difference
          echo The variable will be printed as value, the secret will remain secret
          echo ---
      - name: Print env variable and secret (do not print secrets in reality!)
        run: |
          echo --- 'Print repo variable (2 ways)'
          echo '$''REPO_VARIABLE =' "$REPO_VARIABLE"'
          echo '$''{{env.REPO_VARIABLE}} =' "${{env.REPO_VARIABLE}}"
          echo ---
          echo --- 'Print repo secret (2 ways)'
          echo '$''REPO_SECRET =' "$REPO_SECRET"'
          echo '$''{{env.REPO_SECRET}} =' "${{env.REPO_SECRET}}"
          echo '$REPO_SECRET = '"$REPO_SECRET"'; $''{{env.REPO_SECRET}} = '"${{env.REPO_SECRET}}"

